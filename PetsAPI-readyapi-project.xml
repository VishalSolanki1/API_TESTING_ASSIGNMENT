<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7afef765-8e13-4d4d-8280-fad397084862" created="3.8.0" activeEnvironment="Default environment" name="PetsAPI" resourceRoot="" updated="3.8.0 2021-04-27T13:32:15Z" encryptionMode="Not encrypted" abortOnError="false" runType="SEQUENTIAL" soapui-version="5.6.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="a6092253-68ca-4a78-9ee1-077ad9d13e7c" name="AddNewPet"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="c6c77351-cc6f-429a-8545-918a297ca95b" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase1" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="datasource" name="Data Source" id="c38e06df-f006-4eb1-a514-3b5a86adcc2c"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>C:/Users/VishalSolanki/Desktop/SDET/Pet Info.xlsx</file><worksheet>Sheet1</worksheet><cell>A2</cell><ignoreEmpty>true</ignoreEmpty><evaluateFormulas>false</evaluateFormulas></con:configuration></con:dataSource><con:shared>false</con:shared><con:restartShared>false</con:restartShared><con:property/><con:property>id</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="datasourceloop" name="Data Source Loop" id="c243adc7-da2d-4d04-a3be-7e9858a4b88a"><con:settings/><con:config><dataSourceStep>Data Source</dataSourceStep><targetStep>REST Request</targetStep><discardResults>true</discardResults></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 2" id="c36332af-7a8f-444c-a8a0-d6fa5852ad80"><con:settings/><con:config><script>import java.io.File
import jxl.*
//read excelfile
Workbook wb = Workbook.getWorkbook(new File('C:/Users/VishalSolanki/Desktop/SDET/testdata.xls'))
sheet = wb.getSheet(0)

 p=sheet.getCell(0,3).getContents()   //column and row
 q=sheet.getCell(1,3).getContents() 
testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Firstname",p)
testRunner.testCase.getTestStepByName("Properties").setPropertyValue("Lastname",q)
//log.info sheet.getRows()
//
//log.info sheet.getColumns()</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="cb2278ba-c587-47f5-aa85-4397614d87f1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ID</con:name><con:value>100</con:value></con:property><con:property><con:name>Firstname</con:name><con:value>Saurabh</con:value></con:property><con:property><con:name>Lastname</con:name><con:value>Yadav</con:value></con:property></con:properties></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c38e06df-f006-4eb1-a514-3b5a86adcc2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/><con:sensitiveInformation/></con:soapui-project>